{"remainingRequest":"/Users/sudhanshupatel/Desktop/final_backup_v3/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/sudhanshupatel/Desktop/final_backup_v3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sudhanshupatel/Desktop/final_backup_v3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sudhanshupatel/Desktop/final_backup_v3/src/App.vue?vue&type=template&id=7ba5bd90&scoped=true&","dependencies":[{"path":"/Users/sudhanshupatel/Desktop/final_backup_v3/src/App.vue","mtime":1633156988932},{"path":"/Users/sudhanshupatel/Desktop/final_backup_v3/node_modules/cache-loader/dist/cjs.js","mtime":1632868027461},{"path":"/Users/sudhanshupatel/Desktop/final_backup_v3/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1632868030098},{"path":"/Users/sudhanshupatel/Desktop/final_backup_v3/node_modules/cache-loader/dist/cjs.js","mtime":1632868027461},{"path":"/Users/sudhanshupatel/Desktop/final_backup_v3/node_modules/vue-loader/lib/index.js","mtime":1632868029458}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}