{"remainingRequest":"/Users/sudhanshupatel/Desktop/final_backup_v3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sudhanshupatel/Desktop/final_backup_v3/src/App.vue?vue&type=style&index=0&id=7ba5bd90&scoped=true&lang=css&","dependencies":[{"path":"/Users/sudhanshupatel/Desktop/final_backup_v3/src/App.vue","mtime":1633156988932},{"path":"/Users/sudhanshupatel/Desktop/final_backup_v3/node_modules/css-loader/dist/cjs.js","mtime":1632868028378},{"path":"/Users/sudhanshupatel/Desktop/final_backup_v3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1632868030041},{"path":"/Users/sudhanshupatel/Desktop/final_backup_v3/node_modules/postcss-loader/src/index.js","mtime":1632868028795},{"path":"/Users/sudhanshupatel/Desktop/final_backup_v3/node_modules/cache-loader/dist/cjs.js","mtime":1632868027461},{"path":"/Users/sudhanshupatel/Desktop/final_backup_v3/node_modules/vue-loader/lib/index.js","mtime":1632868029458}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyogQXZvaWQgb3ZlcmxhcCBvZiBuYXYgZHJhd2VyIGFuZCBhcHAtYmFyLiAgU291cmNlOiBodHRwczovL2NvZGVwZW4uaW8vaGFtZWRiYWF0b3VyL3Blbi9nT3B3d2pKICovCmhlYWRlciB7CiAgcG9zdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDsKICB0b3A6IDAgIWltcG9ydGFudDsKICBsZWZ0OiAwICFpbXBvcnRhbnQ7CiAgei1pbmRleDogOTk5OTkgIWltcG9ydGFudDsKfQoKbmF2LCBtYWluewogIG1hcmdpbi10b3A6IDRyZW0gIWltcG9ydGFudDsKfQoKbWFpbiB7CiAgcGFkZGluZzogMnJlbTsKfQoKZGl2LmNvbnRhaW5lciB7CiAgcG9zdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDsKICBoZWlnaHQ6IDEwMCU7CiAgd2lkdGg6IDEwMCU7CiAgbWFyZ2luOiAwcHggMHB4IDBweCAwcHggIWltcG9ydGFudDsKICBwYWRkaW5nOiAwcHggMHB4IDBweCAwcHggIWltcG9ydGFudDsKICBtYXgtd2lkdGg6IG5vbmUgIWltcG9ydGFudDsKfQoKI2NhbnZhc09uZSB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOwogIHdpZHRoOiAxMDAlOwogIG1heC1oZWlnaHQ6IDEwMCU7CiAgbWluLWhlaWdodDogMTAwJTsKfQoKI2FwcCB7CiAgYmFja2dyb3VuZC1jb2xvcjpibGFjazsgCiAgY29sb3I6d2hpdGU7CiAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjI1KSAwcHggNTRweCA1NXB4LCByZ2JhKDAsIDAsIDAsIDAuMTIpIDBweCAtMTJweCAzMHB4LCByZ2JhKDAsIDAsIDAsIDAuMTIpIDBweCA0cHggNnB4LCByZ2JhKDAsIDAsIDAsIDAuMTcpIDBweCAxMnB4IDEzcHgsIHJnYmEoMCwgMCwgMCwgMC4wOSkgMHB4IC0zcHggNXB4Owp9Ci52LW1haW4gewogIHBhZGRpbmctdG9wOiAwcHggIWltcG9ydGFudDsKICBwYWRkaW5nLXJpZ2h0OiAwcHggIWltcG9ydGFudDsKfQouYnRuLWFjdGl2ZSB7CiAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiXA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    <v-navigation-drawer\n      v-model=\"drawer\"\n      color=\"black\"\n      dark\n      app\n      >\n      <v-list dense>\n        <v-list-item>\n           <v-switch\n              v-model=\"activeMyLocationLayer\"\n              label=\"My Location\"\n              color=\"blue darken-1\"\n              v-on:click=\"triggerMyLocationLayer();addMyLocationLocations()\"\n              hide-details\n            ></v-switch>\n        </v-list-item>\n        <v-list-item>\n           <v-switch\n              v-model=\"activeDebrisLayer\"\n              label=\"Debris\"\n              color=\"blue draken-1\"\n              v-on:click=\"triggerDebrisLayer()\"\n              hide-details\n            ></v-switch>\n        </v-list-item>\n        <v-list-item></v-list-item>\n        <v-divider></v-divider>\n        <v-list-item></v-list-item>\n        <v-list-item>\n          <v-btn-toggle\n            tile\n            group\n            >\n  \n          </v-btn-toggle>\n        </v-list-item>\n      </v-list>\n    </v-navigation-drawer>\n\n    <v-app-bar app color=\"black\" dark>\n      <v-app-bar-nav-icon @click.stop=\"drawer = !drawer\"></v-app-bar-nav-icon>\n      <div class=\"d-flex align-center\">\n        <a\n          href=\"https://github.com/sudhanshupatel-dev/Manji-Debris-Tracking\"\n        >\n        <v-img\n          alt=\"Manji Logo\"\n          class=\"shrink mr-2\"\n          contain\n          src=\"@/assets/Manji logo.png\"\n          transition=\"scale-transition\"\n          width=\"160\"\n        />\n\n        </a>\n      </div>\n\n      <v-spacer></v-spacer>\n\n        <a\n          href=\"https://worldwind.arc.nasa.gov/\"\n        >\n        <v-img\n          alt=\"NASA Logo\"\n          class=\"shrink mr-2 nasa-logo\"\n          contain\n          src=\"@/assets/1200px-NASA_logo.png\"\n          transition=\"scale-transition\"\n          width=\"70\"\n        />\n        </a>\n        <div>NASA WorldWind </div>\n    </v-app-bar>\n\n    <v-main>\n          <div id=\"app\">\n        <p>Latitude = {{ lat }} Longitude = {{ lon }}</p>\n\n        <v-flex class = \"mt-4 mb-3\">\n                  <v-btn v-on:click=\"NearestDebris()\">Nearest Debris</v-btn>   \n        </v-flex>\n        <p>Nearest Debris: Latitude = {{nearlat}} Longitude = {{nearlon}}</p>\n        <p>{{ error }}</p>\n      </div>\n       <v-dialog\n      dark\n      v-model=\"showEditAnnotationDialog\"\n      max-width=\"290\"\n    >\n      <v-card>\n        <v-card-title class=\"headline\">Edit Marker</v-card-title>\n\n          <v-text-field\n          v-model=\"annotationText\"\n          value=\"Edit Annotation Text\"\n          class=\"pl-6 pr-12\"\n        ></v-text-field>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"blue darken-1\"\n            text\n            @click=\"pickedObject.text = annotationText; showEditAnnotationDialog = false; wwd.redraw()\"\n          >\n            Submit\n          </v-btn>\n          <v-btn\n            color=\"blue darken-1\"\n            text\n            @click=\"showEditAnnotationDialog = false\"\n          >\n            Cancel\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n      <v-container class=\"flex-grow-1\">\n        <canvas id=\"canvasOne\" class=\"flex-grow-1\">\n          Your browser does not support HTML5 Canvas.\n        </canvas>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport WorldWind from \"@nasaworldwind/worldwind\";\nimport DebrisLocationsJson from \"../target.json\";\n\n\n\nexport default {    \n  name: \"WorldWiind\",\n\n  data: () => ({\n    lat:'',\n    lon:'',\n    nearlat:'',\n    nearlon:'',\n    drawer: null,\n    wwd: null,\n    DebrisLocationsPlacemarkLayer: null,\n    MyLocationLocationsPlacemarkLayer: null,\n    userPlacemarkLayer: null,\n    activeDebrisLayer: true,\n    activeMyLocationLayer: true,\n    canPlaceMarker: false, // If set to true, click on wwd will add placemarker\n    canMoveMarker: false,\n    showEditAnnotationDialog: false,\n    pickedObject: null, // Store a reference to the last pickedObject\n    annotationText: \"\",\n    customMarkerCounter: 0,\n    objectToMove: null\n  }),\n\n  methods: {\n  myFunction: function () {\n   if(navigator.geolocation){\n   navigator.geolocation.getCurrentPosition(this.showPosition);\n   }else{\n   this.error = \"Geolocation is not supported.\";\n\n    }\n    },\n  showPosition:function (position) {\n    this.lat = position.coords.latitude;\n    this.lon = position.coords.longitude;\n    console.log(this.lat,this.lon);\n    },\n\n    NearestDebris (){\n        var LAT = this.lat;\n    var LON = this.lon;\n    var R = 6371;\n    var minimum = 10000000000;\n    var arr = new Array(2);\n      DebrisLocationsJson.forEach(function(store) {\n      var dLat = (store.[\"lat\"]-LAT) * Math.PI / 180;\n      var dLon = (store.[\"lng\"]-LON) * Math.PI / 180; \n      var dlat1 = (LAT) * Math.PI / 180;\n      var dlat2 = (store.[\"lat\"]) * Math.PI / 180;\n      var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(dlat1) * Math.cos(dlat2); \n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n      var d = R * c;\n        if (Math.abs(d) < minimum){\n        minimum = d;\n        arr[0] = store.[\"lat\"];\n        arr[1] = store.[\"lng\"];\n        }\n      });\n      this.nearlat = arr[0];\n      this.nearlon = arr[1];\n        console.log(this.nearlat);\n    },\n    triggerMyLocationLayer () {\n    this.myFunction();\n      //this.addMyLocationLocations()\n      this.MyLocationLocationsPlacemarkLayer.enabled = !this.MyLocationLocationsPlacemarkLayer.enabled;\n      this.wwd.redraw();\n      this.activeMyLocationLayer = this.MyLocationLocationsPlacemarkLayer.enabled;\n      \n    },\n\n    triggerDebrisLayer () {\n      \n      this.DebrisLocationsPlacemarkLayer.enabled = !this.DebrisLocationsPlacemarkLayer.enabled;\n      this.wwd.redraw();\n      this.activeDebrisLayer = this.DebrisLocationsPlacemarkLayer.enabled;\n      this.$forceUpdate();\n    },\n\n    setAnnotationAttributes () {\n       // Set default annotation attributes.\n        const annotationAttributes = new WorldWind.AnnotationAttributes(null);\n        annotationAttributes.cornerRadius = 14;\n        annotationAttributes.backgroundColor = WorldWind.Color.MEDIUM_GRAY;\n        annotationAttributes.drawLeader = true;\n        annotationAttributes.leaderGapWidth = 40;\n        annotationAttributes.leaderGapHeight = 30;\n        annotationAttributes.opacity = 1;\n        annotationAttributes.scale = 1;\n        annotationAttributes.width = 150;\n        annotationAttributes.height = 100;\n        annotationAttributes.textAttributes.color = WorldWind.Color.BLACK;\n        annotationAttributes.insets = new WorldWind.Insets(10, 10, 10, 10);\n\n        return annotationAttributes;\n    },\n\n    defineLocationPlacemarkAttributes (store) {\n      const placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n\n      placemarkAttributes.imageOffset = new WorldWind.Offset(\n        WorldWind.OFFSET_FRACTION, 0.3,\n        WorldWind.OFFSET_FRACTION, 0.0);\n\n      if (store === \"Debris\") {\n        placemarkAttributes.labelAttributes.color = WorldWind.Color.RED;\n        placemarkAttributes.imageSource = \"https://i.ibb.co/TL4Zhjd/debris-2.png\"\n        //placemarkAttributes.imageSource = WorldWind.WWUtil.currentUrlSansFilePart() + \"./assets/pushpins/plain-red.png\"\n      } else if (store === \"MyLocation\") {\n        placemarkAttributes.labelAttributes.color = WorldWind.Color.BLUE;\n        placemarkAttributes.imageSource = \"https://files.worldwind.arc.nasa.gov/artifactory/web/0.9.0/images/pushpins/plain-blue.png\"\n      } else if (store === \"user\") {\n        placemarkAttributes.labelAttributes.color = WorldWind.Color.WHITE;\n      }\n\n      placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n        WorldWind.OFFSET_FRACTION, 0.5,\n        WorldWind.OFFSET_FRACTION, 1.0);\n\n      placemarkAttributes.imageScale = .4; //Fixme\n\n      return placemarkAttributes;\n    },\n\n    addDebrisLocations () {\n      const placemarkAttributes = this.defineLocationPlacemarkAttributes(\"Debris\")\n      const self = this;\n      DebrisLocationsJson.forEach(function(store) {\n        var position = new WorldWind.Position(store.[\"lat\"], store[\"lng\"], 500000.0);\n        var placemark = new WorldWind.Placemark(position, false, placemarkAttributes);\n        placemark.alwaysOnTop = true;\n        self.DebrisLocationsPlacemarkLayer.addRenderable(placemark);\n      });\n    },\n\n    addMyLocationLocations () {\n      const placemarkAttributes = this.defineLocationPlacemarkAttributes(\"MyLocation\")\n      const self = this;\n      \n      //console.log(this.lat); work on this, mounted issue\n      var position = new WorldWind.Position(this.lat,this.lon,100.0);\n      var placemark = new WorldWind.Placemark(position,false,placemarkAttributes);\n      placemark.alwaysOnTop = true;\n      self.MyLocationLocationsPlacemarkLayer.addRenderable(placemark);\n    }\n  },\n  \n\n  mounted () {\n    // Add Layers\n    this.wwd = new WorldWind.WorldWindow(\"canvasOne\");\n    //this.wwd.addLayer(new WorldWind.BMNGOneImageLayer());\n    this.wwd.addLayer(new WorldWind.BMNGLandsatLayer());\n\n    //Debris Stores Placemark Layer\n    this.DebrisLocationsPlacemarkLayer = new WorldWind.RenderableLayer();\n    this.wwd.addLayer(this.DebrisLocationsPlacemarkLayer);\n    this.triggerDebrisLayer(); // start with layer off\n\n    //MyLocation Stores Placemark Layer\n    this.MyLocationLocationsPlacemarkLayer = new WorldWind.RenderableLayer();\n    this.wwd.addLayer(this.MyLocationLocationsPlacemarkLayer);\n    this.triggerMyLocationLayer(); // start with layer off\n\n    //User Placemark Layer\n    this.userPlacemarkLayer = new WorldWind.RenderableLayer();\n    this.wwd.addLayer(this.userPlacemarkLayer);\n\n\n\n    this.addDebrisLocations();\n    //this.addMyLocationLocations();\n    this.NearestDebris();\n    // Set mouse event listener to handle dynamic user placemarks\n    // Borrowed from GoToLocation.js -> https://github.com/NASAWorldWind/WebWorldWind/blob/develop/examples/GoToLocation.js\n    const self = this;\n    new WorldWind.ClickRecognizer(this.wwd, function(e) {\n      // Obtain the event location.\n      const x = e.clientX,\n        y = e.clientY;\n\n      if (self.canMoveMarker && !self.canPlaceMarker) {\n        const pickList = self.wwd.pick(self.wwd.canvasCoordinates(x, y));\n\n        if (!self.objectToMove) { // pick up object on first click\n          if (!pickList.hasNonTerrainObjects()) return;\n          self.objectToMove = pickList.topPickedObject().userObject;\n\n        // If only one thing is picked and it is the terrain, change the object location to that terrain position\n        } else if (pickList.objects.length === 1 && pickList.objects[0].isTerrain && self.objectToMove) {\n          self.objectToMove.position = pickList.objects[0].position;\n          self.objectToMove = null; // reset objectToMove\n          self.wwd.redraw()\n        }\n      }\n\n      // Place custom annotation marker on map\n      if (self.canPlaceMarker && !self.canMoveMarker) {\n        // Perform the pick. Must first convert from window coordinates to canvas coordinates, which are\n        // relative to the upper left corner of the canvas rather than the upper left corner of the page.\n        const pickList = self.wwd.pick(self.wwd.canvasCoordinates(x, y));\n\n        // If only one thing is picked and it is the terrain, tell the WorldWindow to go to the picked location.\n        if (pickList.objects.length === 1 && pickList.objects[0].isTerrain) {\n          const position = pickList.objects[0].position;\n\n          const annotationAttributes = self.setAnnotationAttributes();\n          const annotation = new WorldWind.Annotation(position, annotationAttributes);\n          annotation.displayName = \"My Placemark\";\n          annotation.text = \"Marker \" + self.customMarkerCounter++;\n          self.userPlacemarkLayer.addRenderable(annotation);\n          self.wwd.redraw()\n        }\n      }\n\n      // Edit custom annotation marker\n      if (!self.canPlaceMarker && !self.canMoveMarker) {\n        // see what the user is picking\n        var pickList = self.wwd.pick(self.wwd.canvasCoordinates(x, y));\n        if (!pickList.hasNonTerrainObjects()) return;\n        const topPickedObject = pickList.topPickedObject().userObject;\n        if (topPickedObject.text !== undefined) {  //FIXME: hacky solution to ignore placemarkers\n          self.showEditAnnotationDialog = true;\n          self.pickedObject = topPickedObject;\n          self.annotationText = topPickedObject.text;\n        }\n      }\n\n    });\n  }\n};\n</script>\n<style scoped>\n/* Avoid overlap of nav drawer and app-bar.  Source: https://codepen.io/hamedbaatour/pen/gOpwwjJ */\nheader {\n  postion: absolute !important;\n  top: 0 !important;\n  left: 0 !important;\n  z-index: 99999 !important;\n}\n\nnav, main{\n  margin-top: 4rem !important;\n}\n\nmain {\n  padding: 2rem;\n}\n\ndiv.container {\n  postion: absolute !important;\n  height: 100%;\n  width: 100%;\n  margin: 0px 0px 0px 0px !important;\n  padding: 0px 0px 0px 0px !important;\n  max-width: none !important;\n}\n\n#canvasOne {\n  position: absolute;\n  background-color: black;\n  width: 100%;\n  max-height: 100%;\n  min-height: 100%;\n}\n\n#app {\n  background-color:black; \n  color:white;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n}\n.v-main {\n  padding-top: 0px !important;\n  padding-right: 0px !important;\n}\n.btn-active {\n  color: white !important;\n}\n</style>\n"]}]}